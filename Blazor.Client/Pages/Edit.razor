@page "/edit/{id:int}"
@using Blazor.Client.Interfaces
@using BlazorCRUD.Shared
@using CurrieTechnologies.Razor.SweetAlert2
@inject IPersonService personService
@inject SweetAlertService Swal
@inject NavigationManager Navigation

<h3>Editar Usuario</h3>

@if (persona == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="persona" OnValidSubmit="GuardarCambios">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label class="form-label">Nombre</label>
            <InputText class="form-control" @bind-Value="persona.Nombre" />
        </div>

        <div class="mb-3">
            <label class="form-label">Apellido Paterno</label>
            <InputText class="form-control" @bind-Value="persona.ApellidoPaterno" />
        </div>

        <div class="mb-3">
            <label class="form-label">Apellido Materno</label>
            <InputText class="form-control" @bind-Value="persona.ApellidoMaterno" />
        </div>

        <div class="mb-3">
            <label class="form-label">Fecha de Nacimiento</label>
            <InputDate class="form-control" @bind-Value="persona.FechaNacimiento" />
        </div>

        <div class="mb-3">
            <label class="form-label">Sexo</label>
            <InputSelect class="form-select" @bind-Value="persona.Sexo">
                <option value="M">Masculino</option>
                <option value="F">Femenino</option>
            </InputSelect>
        </div>

        <button type="submit" class="btn btn-primary">Guardar</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="Cancelar">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }

    private Person persona = new Person();

    protected override async Task OnInitializedAsync()
    {
        var personaExistente = await personService.GetPersona(id);
        if (personaExistente != null)
        {
            persona = personaExistente;
        }
    }

    private async Task GuardarCambios()
    {
        bool response = await personService.PutPersona(id, new RegisterDTO()
        {
            Nombre = persona.Nombre,
            ApellidoMaterno = persona.ApellidoMaterno,
            ApellidoPaterno = persona.ApellidoPaterno,
            FechaNacimiento = persona.FechaNacimiento,
            Sexo = persona.Sexo
        });
        if (response)
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Usuario Actualizacion",
                Text = "El usuario ha sido actualizado exitosamente.",
                Icon = SweetAlertIcon.Success,
            });
        }
        else
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Error",
                Text = "No se pudo actualizar el usuario.",
                Icon = SweetAlertIcon.Error,
            });
        }
        Navigation.NavigateTo("/"); // Regresa a la lista principal
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/");
    }
}