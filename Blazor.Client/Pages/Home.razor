@page "/"
@using Blazor.Client.Interfaces
@using BlazorCRUD.Shared
@using CurrieTechnologies.Razor.SweetAlert2
@inject IPersonService personService
@inject SweetAlertService Swal
@inject NavigationManager Navigation

<PageTitle>Users</PageTitle>

<h3>Lista de Usuarios</h3>

<table class="table table-striped">
    <thead class="table-dark">
        <tr>
            
            <th>Nombre Completo</th>
            <th>Fecha de Nacimiento</th>
            <th>Genero</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @if (user != null && user.Count > 0)
        {
            foreach (var u in user)
            {
                <tr>
                    <td>@u.nombreCompleto</td>
                    <td>@u.FechaNacimiento.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("es-MX")).ToUpper()</td>
                    <td>@u.Sexo</td>
                    <td>
                        <button class="btn btn-sm btn-primary me-2" @onclick="() => EditarUsuario(u.ID)">Editar</button>
                        <button class="btn btn-sm btn-danger" @onclick="() => EliminarUsuario(u.ID)">Eliminar</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4">No hay usuarios registrados.</td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<PersonDTO> user = new List<PersonDTO>();

    protected override async Task OnInitializedAsync()
    {
        user = await personService.GetPersonas();
    }

    private void EditarUsuario(int id)
    {
        Navigation.NavigateTo($"/edit/{id}");
    }

    private async Task EliminarUsuario(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "Eliminr Usuario",
            Text = "¿Estás seguro de que deseas eliminar este usuario?",
            Icon = SweetAlertIcon.Question,
            ShowCancelButton = true,
        });

        if(resultado.IsConfirmed)
        {
            var response = await personService.DeletePersona(id);
            if (response)
            {
                await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Usuario Eliminado",
                    Text = "El usuario ha sido eliminado exitosamente.",
                    Icon = SweetAlertIcon.Success,
                });
                user = await personService.GetPersonas(); // Refresh the user list
            }
            else
            {
                await Swal.FireAsync(new SweetAlertOptions
                {
                    Title = "Error",
                    Text = "No se pudo eliminar el usuario.",
                    Icon = SweetAlertIcon.Error,
                });
            }
        }
    }
}
